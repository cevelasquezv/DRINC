#
# Default settings for the simulation
#
# Total scenarios = 11 x 4 x 5 = 220
## Scenario settings
# Changes in DrincRouter2 (probability updating) dp^deltas
# python del_ratio.py > 20151207_6x6km_12h_inf_5M_15101_data.in
#----------Identification---------------------
#Scenario.name = Goldfish2Test15
Scenario.name = Goldfish2_%%Group.router%%_rng-%%MovementModel.rngSeed%%_buffer-%%Group.bufferSize%%
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
#---------Sim Time---------------
# 43200s == 12h
# 86400s == 24h
# 172800s == 48h
# 604800s == 1 week
Scenario.endTime = 604800
WiFi80211.type = SimpleBroadcastInterface
WiFi80211.transmitSpeed = 1M
WiFi80211.transmitRange = 10

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
# IEEE 802.11b: ~ 11 Mbits/s for 200 m
btInterface.transmitSpeed = 1M
btInterface.transmitRange = 10

#-------------Numero de Grupos: 4 grupos( 1 das avenidas, 1 das ruas e 2 das estações)------------
Scenario.nrofHostGroups = 4

#-------------Modelo de Movimento para todos os nodes............................

Group.bufferSize = [1000M; 500M; 200M; 150M; 100M; 50M; 40M; 30M; 20M; 10M; 5M;]
#Group.bufferSize = 50M
Group.routeType = 1
Group.router = [EpidemicRouter; SprayAndWaitRouter; ProphetV2Router; DrincRouter2;]
#Group.router = ProphetV2Router
Group.waitTime = 10, 30
Group.speed = 1, 3
#Group.nrofInterfaces = 1
#Group.interface1 = WiFi80211
Group1.nrofInterfaces = 1
Group2.nrofInterfaces = 1
Group3.nrofInterfaces = 1
Group4.nrofInterfaces = 1
Group1.interface1 = WiFi80211
Group2.interface1 = WiFi80211
Group3.interface1 = WiFi80211
Group4.interface1 = WiFi80211

SprayAndWaitRouter.binaryMode = true
SprayAndWaitRouter.nrofCopies = 8

ProphetRouter.secondsInTimeUnit = 30
ProphetV2Router.secondsInTimeUnit = 30

DRINC.nrofCopies = 2
#12 hour to update delivery probabilities
DRINC.secondsInTimeUnit = 43200

#-------------------------------ROTAS ONIBUS--------------------------------------------
Group1.groupID = GW1_
Group1.nrofHosts = 1
Group1.movementModel = StationaryMovement
# Group1.nodeLocation = 12.1002765647717, 685.5269697447313 POINT (134.7306880541654 280.856474225962)
#Group1.coord = 12.1002765647717, 685.5269697447313 
# Y = Maior valor do Y do connection point - valor do Y daqui (768-685) (364 - 280)= 84
# IMPORTANTE PARA EXPLICAR NO VÍDEO: Se você for precisar usar pontos estacionários para nós, deve-se colocar
# uma guia de conexão com o eixo dos Y mais alto do que o ponto mais alto do mapa. Na hora de conectar as coordenadas,
# deve-se subtrair esse valor de Y da coordenada Y do parametro node location
Group1.nodeLocation = 1250, 830
# Group1.okMaps = 1

Group2.groupID= WSN_
Group2.nrofHosts = 5
#Group2.movementModel = MapRouteMovement
Group2.movementModel = ShortestPathMapBasedMovement
#Group2.routeFile= data/Goldfish/WSN.wkt
Group2.okMaps = 1,2

Group3.groupID= MAP_
Group3.nrofHosts = 10
#Group3.movementModel = MapRouteMovement
Group3.movementModel = ShortestPathMapBasedMovement
#Group3.routeFile= data/Goldfish/MAPs.wkt
Group3.okMaps = 1

Group4.groupID = ICS_
Group4.nrofHosts = 1
Group4.movementModel = StationaryMovement
#Group4.nodeLocation = 744.9317350708827, 134.36010865409426 POINT (405.90629261441325 58.362760978328595) POINT (540.6145584725537 310.0835322195704)
Group4.nodeLocation = 3960, 3050
# Group4.coord = 744.9317350708827, 134.36010865409426
# Group4.okMaps = 4

#----------------------------------------------------------------------------------------------
MapBasedMovement.nrofMapFiles = 2
MapBasedMovement.mapFile1 = data/Goldfish/MAPs.wkt
MapBasedMovement.mapFile2 = data/Goldfish/WSN.wkt
#MapBasedMovement.mapFile3 = data/Goldfish/Connection_Lines.wkt

#-------------------Menssagens----------------------------

# How many event generators
Events.nrof = 1
#Class of the first event generator
Events1.class = MessageEventGenerator

#-----------------------Intervalos em segundos---------------
Events1.interval = 3600, 7200

#------------------------Tamanho das Menssagens -------------
Events1.size = 2000, 2000

#----------------------------------------------------------------
#Source
Events1.hosts = 1,6
#Destinations
Events1.tohosts = 16,17

#-------------------------ID das Mensgens-----------------------
Events1.prefix = A

#------------------------Modelo de Configuração de Movimento---
#MovementModel.rngSeed = 1
MovementModel.rngSeed = [1; 2; 3; 4; 5;]
# MovimentModel.worldSize = 10000, 10000
MovementModel.worldSize = 6000, 6000
MovementModel.warmup = 10
#---------------------------------------------    8895-2450----------------
#----------------------Quantos Relatórios para carregar------
Report.nrofReports = 9
#----------------------Tamanho do Período de Aquecimento-----
Report.warmup = 0
Report.granularity = 1
#----------------------diretório padrão de relatórios--------
Report.reportDir = my_reports/Goldfish2Test15

Report.report1 = MessageStatsReport
Report.report2 = DeliveredMessagesReport
Report.report3 = ContactsPerHourReport
Report.report4 = CreatedMessagesReport
Report.report5 = DistanceDelayReport
Report.report6 = MessageGraphvizReport
Report.report7 = MessageDeliveryReport
Report.report8 = MessageDelayReport
Report.report9 = MessageReport
#Report.report10 = MessageLocationReport
#MessageLocationReport.granularity = 1
#MessageLocationReport.messages = 1
#Report.report11 = EventLogReport


#------------------------------------------------



## Optimization settings -- these affect the speed of the simulation
## see World class for details.
#Optimization.cellSizeMult = 2
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true

## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/Goldfish2/MapaGoldfish2.PNG
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
